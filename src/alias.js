export default [
   ///BASIC///
   /* st */ {
      cat: 'basic',
      alias: 'st',
      syntax: 'git st',
      commands: ['git status'],
      title: 'status of repo',
      desc: '',
   },
   /* ad */ {
      cat: 'basic',
      alias: 'ad',
      syntax: 'git ad',
      commands: ['git add <file_name>'],
      title: 'add files to be staged',
      desc: '',
   },
   /* ct */ {
      cat: 'basic',
      alias: 'ct',
      syntax: "git ct '<message>'",
      commands: ["git commit -m '<message>'"],
      title: 'commit with message',
      desc: '',
   },
   ///COMMIT OPTIONS///
   /* dct */ {
      cat: 'commit',
      alias: 'dct',
      syntax: "git dct '<message>'",
      commands: ['git add .', "git commit -m '<message>'"],
      title: 'add + commit',
      desc: '',
   },
   /* ctp */ {
      cat: 'commit',
      alias: 'ctp',
      syntax: "git ctp '<message>'",
      commands: ["git commit -m '<message>'", 'git push'],
      title: 'commit + push',
      desc: '',
   },
   /* dctp */ {
      cat: 'commit',
      alias: 'dctp',
      syntax: "git dctp '<message>'",
      commands: ['git add .', "git commit -m '<message>'", 'git push'],
      title: 'add + commit + push',
      desc: '',
   },
   /* rct */ {
      cat: 'commit',
      alias: 'rct',
      syntax: "git rct '<message>'",
      commands: ['git add .', "git commit --amend --allow-empty -m '<message>'"],
      title: 'add + redo last commit',
      desc: '',
   },
   /* rctp */ {
      cat: 'commit',
      alias: 'rctp',
      syntax: "git rctp '<message>'",
      commands: [
         'git add .',
         "git commit --amend --allow-empty -m '<message>'",
         'git push --force',
      ],
      title: 'add + redo last commit + push',
      desc: '',
   },
   /* rcm */ {
      cat: 'commit',
      alias: 'rcm',
      syntax: "git rcm '<message>'",
      commands: ["git commit --amend --allow-empty -m '<message>'"],
      title: 'redo last commit message',
      desc: '',
   },
   /* rcmp */ {
      cat: 'commit',
      alias: 'rcmp',
      syntax: "git rcmp '<message>'",
      commands: ["git commit --amend --allow-empty -m '<message>'", 'git push --force'],
      title: 'redo last commit message + push',
      desc: '',
   },
   /* push-dist */ {
      cat: 'commit',
      alias: 'push-dist',
      syntax: 'git push-dist',
      commands: ['subtree push --prefix dist origin gh-pages'],
      tdrSyntax: 'git push-dist <remote>',
      tdrCommands: ['subtree push --prefix dist <remote> gh-pages'],
      title: 'push subfolder dist to gh-pages',
      desc: '',
   },
   /* push-gh-pages */ {
      cat: 'commit',
      alias: 'push-gh-pages',
      syntax: 'git push-gh-pages <folder>',
      commands: ['git subtree push origin --prefix <folder> gh-pages'],
      tdrSyntax: 'git push-gh-pages <remote> <folder>',
      tdrCommands: ['git subtree push <remote> --prefix <folder> gh-pages'],
      title: 'push any subfolder to gh-pages',
      desc: '',
   },
   ///FILE OPERATIONS///
   /* rename */ {
      cat: 'file',
      alias: 'rename',
      syntax: 'git rename <old-name> <new-name>',
      commands: ['git mv <old-name> <new-name>'],
      title: 'rename file',
      desc: '',
   },
   /* unstage */ {
      cat: 'file',
      alias: 'unstage',
      syntax: 'git unstage <file>',
      commands: ['git restore --staged <file>'],
      title: 'unstage file',
      desc: '',
   },
   /* unmodify */ {
      cat: 'file',
      alias: 'unmodify',
      syntax: 'git unmodify <file>',
      commands: ['git restore <file>'],
      title: 'unmodify file',
      desc: '',
   },
   /* untrack */ {
      cat: 'file',
      alias: 'untrack',
      syntax: 'git untrack <file>',
      commands: ['git rm --cached -r <file>'],
      title: 'untrack file',
      desc: '',
   },
   /* delete-untracked */ {
      cat: 'file',
      alias: 'delete-untracked',
      syntax: 'git delete-untracked',
      commands: ['git clean -d -f'],
      title: 'delete untracked files',
      desc: '',
   },
   ///BRANCH///
   /* branches */ {
      cat: 'branch',
      alias: 'branches',
      syntax: 'git branches',
      commands: ['git branch -a'],
      title: 'display all branches',
      desc: '',
   },
   /* sync */ {
      cat: 'branch',
      alias: 'sync',
      syntax: 'git sync',
      commands: ['git fetch -p --all', 'git pull'],
      title: 'sync local branch with remote',
      desc: '',
   },
   /* br */ {
      cat: 'branch',
      alias: 'br',
      syntax: 'git br <branch>',
      commands: ['git checkout -b <branch>'],
      title: 'create a branch & checkout',
      desc: '',
   },
   /* co */ {
      cat: 'branch',
      alias: 'co',
      syntax: 'git co <branch>',
      commands: ['git checkout <branch>'],
      title: 'checking out a branch',
      desc: '',
   },
   /* track */ {
      cat: 'branch',
      alias: 'track',
      syntax: 'git track <remote-branch>',
      commands: ['git push -u origin <remote-branch>'],
      tdrSyntax: 'git track <remote> <remote-branch>',
      tdrCommands: ['git push -u <remote> <remote-branch>'],
      title: 'set local branch to track remote branch',
      desc: '',
   },
   /* push-lb */ {
      cat: 'branch',
      alias: 'push-lb',
      syntax: 'git push-lb <local-branch>',
      commands: ['git push -u origin <local-branch>'],
      tdrSyntax: 'git push-lb <remote> <local-branch>',
      tdrCommands: ['git push -u <remote> <local-branch>'],
      title: 'push local branch to remote',
      desc: '',
   },
   /* delete-lb */ {
      cat: 'branch',
      alias: 'delete-lb',
      syntax: 'git delete-lb <local-branch>',
      commands: ['git branch -d <local-branch>'],
      title: 'delete local branch',
      desc: '',
   },
   /* pull-rb */ {
      cat: 'branch',
      alias: 'pull-rb',
      syntax: 'git pull-rb <remote-branch>',
      commands: ['git fetch', 'git checkout <remote-branch>'],
      title: 'pull remote branch to local',
      desc: '',
   },
   /* delete-rb */ {
      cat: 'branch',
      alias: 'delete-rb',
      syntax: 'git delete-rb <remote-branch>',
      commands: ['git push --delete origin <remote-branch>'],
      tdrSyntax: 'git delete-rb <remote> <remote-branch>',
      tdrCommands: ['git push --delete <remote> <remote-branch>'],
      title: 'delete remote branch',
      desc: '',
   },
   /* delete-lb-rb */ {
      cat: 'branch',
      alias: 'delete-lb-rb',
      syntax: 'git delete-lb-rb <branch>',
      commands: ['git branch -d <branch>', 'git push --delete origin <branch>'],
      tdrSyntax: 'git delete-lb-rb <remote> <branch>',
      tdrCommands: ['git branch -d <branch>', 'git push --delete <remote> <branch>'],
      title: 'delete local + remote branch',
      desc: '',
   },
   /* delete-rb-refs */ {
      cat: 'branch',
      alias: 'delete-rb-refs',
      syntax: 'git delete-rb-refs',
      commands: ['git fetch -p'],
      title: 'delete remote branch refs',
      desc: '',
   },
   ///REMOTE///
   /* remote-details */ {
      cat: 'remote',
      alias: 'remote-details',
      syntax: 'git remote-details',
      commands: ['git remote show origin'],
      tdrSyntax: 'git remote-details <remote>',
      tdrCommands: ['git remote show <remote>'],
      title: 'show the details of a remote',
      desc: '',
   },
   /* remote-url */ {
      cat: 'remote',
      alias: 'remote-url',
      syntax: 'git remote-url',
      commands: ['git remote -v'],
      title: '',
      desc: '',
   },
   /* add-remote */ {
      cat: 'remote',
      alias: 'add-remote',
      syntax: 'git add-remote <url>',
      commands: ['git remote add origin <url>'],
      tdrSyntax: 'git add-remote <remote> <url>',
      tdrCommands: ['git remote add <remote> <url>'],
      title: 'add a remote',
      desc: '',
   },
   /* delete-remote */ {
      cat: 'remote',
      alias: 'delete-remote',
      syntax: 'git delete-remote',
      commands: ['git remote remove origin'],
      tdrSyntax: 'git delete-remote <remote>',
      tdrCommands: ['git remote remove <remote>'],
      title: 'delete a remote',
      desc: '',
   },
   /* rename-remote */ {
      cat: 'remote',
      alias: 'rename-remote',
      syntax: 'git rename-remote <new-name>',
      commands: ['git remote rename origin <new-name>'],
      tdrSyntax: 'git rename-remote <remote> <new-name>',
      tdrCommands: ['git remote rename <remote> <new-name>'],
      title: 'rename a remote',
      desc: '',
   },
   /* edit-remote-url */ {
      cat: 'remote',
      alias: 'edit-remote-url',
      syntax: 'git edit-remote-url <url>',
      commands: ['git remote remove origin', 'git remote add origin <url>'],
      tdrSyntax: 'git edit-remote-url <remote> <url>',
      tdrCommands: ['git remote remove <remote>', 'git remote add <remote> <url>'],
      title: 'edit the url of a remote',
      desc: '',
   },
   ///TAG///
   /* tags */ {
      cat: 'tag',
      alias: 'tags',
      syntax: 'git tags',
      commands: ['git tag --list --sort=-v:refname'],
      title: 'show all tags',
      desc: '',
   },
   /* last-tag */ {
      cat: 'tag',
      alias: 'last-tag',
      syntax: 'git last-tag',
      commands: ['git describe --tags --abbrev=0'],
      title: 'show the last tag',
      desc: '',
   },
   /* tag-details */ {
      cat: 'tag',
      alias: 'tag-details',
      syntax: 'git tag-details <tag>',
      commands: ['git show -s <tag>^{commit}'],
      title: 'show the details of a tag',
      desc: '',
   },
   /* release */ {
      cat: 'tag',
      alias: 'release',
      syntax: "git release <version> '<message>'",
      commands: ["git tag -a <version> -m '<message>'"],
      title: 'create a release aka annotated tag',
      desc: '',
   },
   /* push-lt */ {
      cat: 'tag',
      alias: 'push-lt',
      syntax: 'git push-lt <local-tag>',
      commands: ['git push origin <local-tag>'],
      tdrSyntax: 'git push-lt <remote> <local-tag>',
      tdrCommands: ['git push <remote> <local-tag>'],
      title: 'push local tag to remote',
      desc: '',
   },
   /* delete-lt */ {
      cat: 'tag',
      alias: 'delete-lt',
      syntax: 'git delete-lt <local-tag>',
      commands: ['git tag -d <local-tag>'],
      title: 'delete local tag',
      desc: '',
   },
   /* delete-rt */ {
      cat: 'tag',
      alias: 'delete-rt',
      syntax: 'git delete-rt <remote-tag>',
      commands: ['git push origin --delete <remote-tag>'],
      tdrSyntax: 'git delete-rt <remote> <remote-tag>',
      tdrCommands: ['git push <remote> --delete <remote-tag>'],
      title: 'delete remote tag',
      desc: '',
   },
   /* delete-lt-rt */ {
      cat: 'tag',
      alias: 'delete-lt-rt',
      syntax: 'git delete-lt-rt <tag>',
      commands: ['git tag -d <tag>', 'git push origin --delete <tag>'],
      tdrSyntax: 'git delete-lt-rt <remote> <tag>',
      tdrCommands: ['git tag -d <tag>', 'git push <remote> --delete <tag>'],
      title: 'delete local + remote tag',
      desc: '',
   },
   /* sync-tags */ {
      cat: 'tag',
      alias: 'sync-tags',
      syntax: 'git sync-tags',
      commands: ['git fetch --tags', 'git push origin --tags'],
      tdrSyntax: 'git sync-tags <remote>',
      tdrCommands: ['git fetch --tags', 'git push <remote> --tags'],
      title: 'sync local & remote tags',
      desc: '',
   },
   /* push-all-lt */ {
      cat: 'tag',
      alias: 'push-all-lt',
      syntax: 'git push-all-lt',
      commands: ['git push origin --tags'],
      tdrSyntax: 'git push-all-lt <remote>',
      tdrCommands: ['git push <remote> --tags'],
      title: 'push all local tags to remote',
      desc: '',
   },
   /* pull-all-rt */ {
      cat: 'tag',
      alias: 'pull-all-rt',
      syntax: 'git pull-all-rt',
      commands: ['git fetch --all --tags'],
      title: 'pull all remote tags to local',
      desc: '',
   },
   ///LOGS///
   /* l */ {
      cat: 'log',
      alias: 'l',
      syntax: 'git l',
      commands: ['git log --decorate'],
      title: 'show log of commits',
      desc: '',
   },
   /* last */ {
      cat: 'log',
      alias: 'last',
      syntax: 'git last',
      commands: ['git log -1 HEAD --decorate'],
      title: 'show the last commit',
      desc: '',
   },
   /* graph */ {
      cat: 'log',
      alias: 'graph',
      syntax: 'git graph',
      commands: ['git log --oneline --graph --all'],
      title: 'show graph of commits',
      desc: '',
   },
];
